{"version":3,"sources":["redux/actions.js","redux/operations.js","components/Slider/Slider.js","redux/selectors.js","views/HomeView.js","components/Card/Card.js","views/ProductsView.js","images/PngItem_833322.png","components/AppBar.js","components/AppToolBar/AppToolBar.js","App.js","redux/reducer.js","redux/store.js","index.jsx"],"names":["fetchSlideRequest","createAction","fetchSlideSuccess","fetchSlideError","fetchImageRequest","fetchImageSuccess","fetchImageError","BASE_URL","API_KEY","axios","defaults","baseURL","params","api_key","dispatch","a","get","data","currentPage","res","response","headers","SliderImage","images","useState","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","className","map","x","i","src","url","alt","name","temperament","getAllImg","state","page","items","getSlides","slider","getAllpages","getlimit","getPage","HomeView","useDispatch","sliderImages","useSelector","selectors","useEffect","operations","el","image","Slider","CardItem","item","React","expanded","setExpanded","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Grid","xs","md","Card","sx","maxWidth","CardHeader","title","height","CardMedia","component","CardContent","Typography","variant","color","origin","weight","metric","CardActions","disableSpacing","aria-label","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","description","Link","href","wikipedia_url","adaptability","child_friendly","health_issues","hypoallergenic","ProductsView","offset","setOffset","pageCount","setPageCount","lastLoadedPage","setLastLoadedPage","contentImages","allPages","limit","Math","ceil","Box","flexGrow","container","spacing","columns","length","shortid","generate","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","forcePage","useStyles","makeStyles","root","backgroundColor","background","menuButton","marginRight","logo","ButtonAppBar","classes","AppBar","position","label","Toolbar","exact","to","ToolBar","StyledToolbar","top","bottom","minHeight","App","path","ProductsViews","AppToolBar","createReducer","_","payload","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffa6cb83.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nexport const fetchSlideRequest = createAction(\"page/fetchSlideRequest\");\r\nexport const fetchSlideSuccess = createAction(\"page/fetchSlideSuccess\");\r\nexport const fetchSlideError = createAction(\"page/fetchSlideError\");\r\n\r\n\r\nexport const fetchImageRequest = createAction(\"page/fetchImageRequest\");\r\nexport const fetchImageSuccess = createAction(\"page/fetchImageSuccess\");\r\nexport const fetchImageError = createAction(\"page/fetchImageError\");\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchSlideRequest,\r\n  fetchSlideSuccess,\r\n  fetchSlideError,\r\n  fetchImageRequest,\r\n  fetchImageSuccess,\r\n  fetchImageError,\r\n} from \"./actions\";\r\n\r\n\r\n const BASE_URL = 'https://api.thecatapi.com/v1';\r\n const API_KEY = '66d67ca1-c80c-425a-a473-00a2b8ef9333';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n};\r\n\r\nexport const fetchImageSlide = ()=> async (dispatch) => {\r\n    dispatch(fetchSlideRequest());\r\n    try {\r\n       const { data } = await axios.get(`${BASE_URL}/breeds?limit=${8}&page=${0}&order=Desc/${API_KEY}`);\r\n      dispatch(fetchSlideSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchSlideError(error));\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport const getImage =(currentPage ) => async (dispatch) => {\r\n    dispatch(fetchImageRequest());\r\n    try {\r\n      const  res = await axios.get(`${BASE_URL}/breeds?limit=${8}&page=${currentPage}&order=Desc/${API_KEY}`);\r\n     let response={\r\n     headers:res.headers, \r\n      data :res.data  \r\n     }\r\n      dispatch(fetchImageSuccess(response));\r\n    } catch (error) {\r\n      dispatch(fetchImageError(error));\r\n    }\r\n  };\r\n\r\n\r\n\r\nexport default {fetchImageSlide, getImage };","import React, { useState } from 'react';\r\n\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nfunction SliderImage({images}) {\r\n\r\n  const config = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1  ,\r\n     responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n            infinite: true,\r\n            dots: true\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            initialSlide: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n                \r\n          }\r\n        }\r\n      ]\r\n  };\r\n\r\n  const [settings, setSettings] = useState(config);\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"container-slider\">\r\n      <Slider {...settings}>\r\n        {images.map((x, i) => {\r\n          return <div key={i} className=\"img-card\">\r\n            <img className=\"img\" src={x.url} alt='image-slide'/>\r\n            <div className=\"card-body\">\r\n              <div className=\"card-title\">{x.name}</div>\r\n              <div className=\"card-text\">{x.temperament}</div>\r\n            </div>\r\n          </div>\r\n        })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SliderImage;","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.page.loading;\r\nexport const getFilter = (state) => state.page.filter;\r\nexport const getAllImg = (state) => state.page.items;\r\nexport const getSlides = (state) => state.page.slider;\r\nexport const getAllpages = (state) => state.page.headers['pagination-count'];\r\nexport const getlimit = (state) => state.page.headers['pagination-limit'];\r\nexport const getPage = (state) => state.page.headers['pagination-page'];\r\n\r\n\r\n\r\nexport const getDat = (state) => state.page;\r\nexport const getAllComments = (state) => state.page.comments;\r\nexport const getVisibleComments = (state) => {\r\n  const comments = getAllComments(state);\r\n  return comments;\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport operations from '../redux/operations';\r\nimport  SliderImage  from '../components/Slider/Slider'\r\nimport * as selectors from '../redux/selectors';\r\n\r\nfunction HomeView() {\r\n    const dispatch = useDispatch();\r\n    const sliderImages = useSelector(selectors.getSlides);\r\n    \r\n    useEffect(() => {\r\n     dispatch(operations.fetchImageSlide());\r\n    }, [dispatch]);\r\n\r\nlet images = sliderImages?.map(function(el) {\r\n  return {name:el.name,temperament:el.temperament,...el.image};\r\n});\r\n\r\n    return (\r\n        <>\r\n         <h1>Main slider</h1>\r\n        <div className=\"main-box\">\r\n         <SliderImage images={images}/>\r\n         </div>\r\n          </>      \r\n      );\r\n\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Link from '@mui/material/Link';\r\n\r\n\r\n\r\nfunction CardItem({item}) {\r\nconst [expanded, setExpanded] = React.useState(false);\r\n\r\n const ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Grid item xs={6} md={3}>\r\n       <Card sx={{ maxWidth: 345 }}>\r\n      <CardHeader\r\n        title={item.name}\r\n        sx={{ height: '110px'}}\r\n      />\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"194\"\r\n    image={`${item?.image?.url}`}\r\n      />\r\n      <CardContent sx={{ height: '120px'}}>\r\n        <Typography variant=\"body2\"  color=\"text.secondary\">\r\n          {`country of origin ${item.origin}`}\r\n        </Typography>\r\n          <Typography variant=\"body2\"  color=\"text.secondary\">\r\n               {`WEIGHT :${item.weight.metric} kg`}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n        </IconButton>\r\n\r\n      <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Description of breed:</Typography>\r\n            <Typography paragraph>\r\n            {`TEMPERAMENT: ${item.temperament}`}\r\n          </Typography>\r\n          <Typography paragraph>\r\n          {`DESCRIPTION: ${item.description}`}\r\n          </Typography>\r\n          <Typography paragraph>\r\n          {`WIKIPEDIA:`}\r\n              <Link  href={item.wikipedia_url} variant=\"body2\">\r\n              {'vikipedia\"'}\r\n            </Link>\r\n          </Typography>\r\n          <Typography>\r\n          {`adaptability: ${item.adaptability}`}\r\n          </Typography>\r\n          <Typography>\r\n          {`friendly: ${item.child_friendly}`}\r\n          </Typography>\r\n                    <Typography>\r\n          {`health: ${item.health_issues}`}\r\n          </Typography>\r\n                    <Typography>\r\n          {`hypoallergenic: ${item.hypoallergenic}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>         \r\n        </Grid>\r\n          </>\r\n      );\r\n\r\n}\r\n\r\nexport default CardItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport operations from '../redux/operations';\r\nimport CardItem from '../components/Card/Card';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport * as selectors from '../redux/selectors';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport shortid from \"shortid\";\r\n\r\n\r\nfunction ProductsView() {\r\n  const [offset, setOffset] = useState(0);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [lastLoadedPage, setLastLoadedPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const contentImages = useSelector(selectors.getAllImg);\r\n  const allPages = useSelector(selectors.getAllpages);\r\n  const limit = useSelector(selectors.getlimit);                 \r\n  const currentPage = useSelector(selectors.getPage);      \r\n\r\n\r\n useEffect(() => {\r\n    dispatch(operations.getImage(offset));\r\n    setPageCount(Math.ceil(allPages/limit));\r\n  }, [dispatch, offset, allPages,limit]);\r\n\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected + 1;\r\n    setOffset(selectedPage);\r\n    setLastLoadedPage(selectedPage);\r\n  };\r\n\r\n    return (\r\n        <>\r\n          <h1>Cats list breed</h1>\r\n       <div className=\"container\">\r\n          <Box sx={{ flexGrow: 1 }}>\r\n        <Grid container spacing={2} columns={12}>\r\n              { contentImages?.length > 0 && contentImages.map(item => (\r\n  <CardItem key={shortid.generate()} item={item} />\r\n      ))}\r\n      </Grid>\r\n    </Box>\r\n</div>\r\n     {contentImages && (\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n            forcePage={lastLoadedPage - 1}\r\n          />\r\n        )}\r\n          </>\r\n      );\r\n\r\n}\r\n\r\nexport default ProductsView;","export default __webpack_public_path__ + \"static/media/PngItem_833322.39f00f94.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from \"../images/PngItem_833322.png\";\r\n\r\nfunction ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n      <AppBar\r\n        position=\"static\"\r\n        classes={{\r\n          root: classes.root,\r\n          label: classes.label,\r\n        }}\r\n      >\r\n        <Toolbar>\r\n           <img src={logo} alt=\"Kitty Katty!\" className={classes.logo} />\r\n          <Typography variant=\"h6\">\r\n            <NavLink\r\n              exact\r\n              to=\"/\"\r\n              className=\"NavLink\"\r\n              activeClassName=\"NavLink--active\"\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            <NavLink\r\n              to=\"/products\"\r\n              className=\"NavLink\"\r\n              activeClassName=\"NavLink--active\"\r\n            >\r\n              Products\r\n            </NavLink>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n  \r\n  );\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '##e1e6e',\r\n    background: 'linear-gradient(45deg, #d0cbcc 30%, #b7c1e7 90%)',\r\n  },\r\n  \r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    backgroundColor: '#9dcfd5',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logo:{\r\n      maxWidth: 40,\r\n      marginRight: '10px'\r\n  }\r\n}));\r\nexport default ButtonAppBar;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { styled } from '@mui/material/styles';\r\nfunction ToolBar() {\r\n  \r\nconst StyledToolbar = styled(AppBar )({\r\n   backgroundColor: '##e1e6e',\r\n    background: 'linear-gradient(45deg, #d0cbcc 30%, #b7c1e7 90%)'\r\n});\r\n  return (\r\n        <StyledToolbar position=\"fixed\" color=\"primary\" sx={{top: 'auto', bottom: 0, minHeight: '30px'}}>\r\n            <Toolbar> \r\n        </Toolbar>\r\n        </StyledToolbar>\r\n  );\r\n}\r\n\r\nexport default ToolBar;\r\n","import React from 'react';\nimport{BrowserRouter,  Route, Switch } from 'react-router-dom';\nimport HomeView from './views/HomeView';\nimport ProductsViews from './views/ProductsView';\nimport  './index.css'\nimport ButtonAppBar from './components/AppBar';\nimport AppToolBar from \"./components/AppToolBar/AppToolBar\";\n\nexport default function App() {\n  return (\n    <>\n    <BrowserRouter>\n      <ButtonAppBar />\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/products\" component={ProductsViews}/>\n      </Switch>\n       <AppToolBar />\n      </BrowserRouter>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\nfetchSlideRequest,\r\nfetchSlideSuccess,\r\nfetchSlideError,\r\nfetchImageRequest,\r\n fetchImageSuccess,\r\nfetchImageError,\r\n} from \"./actions\";\r\n\r\n\r\n\r\nconst slider = createReducer([], {\r\n  [fetchSlideSuccess]: (_, { payload }) => [...payload],\r\n});\r\n\r\n\r\nconst headers = createReducer({}, {\r\n  [fetchImageSuccess]: (_, { payload }) => payload.headers,\r\n});\r\n\r\n\r\nconst items = createReducer([], {\r\n [fetchImageRequest]: (_, { payload }) => payload,\r\n  [fetchImageSuccess]: (_, { payload }) => payload.data\r\n\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchSlideRequest]: () => true,\r\n  [fetchSlideSuccess]: () => false,\r\n  [fetchSlideError]: () => false,\r\n   [fetchImageRequest]: () => true,\r\n  [fetchImageSuccess]: () => false,\r\n  [fetchImageError]: () => false,\r\n});\r\n\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  slider,\r\n  items,\r\n headers,\r\n  loading,\r\n  error,\r\n});\r\n","import contactReducer from \"./reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  page: contactReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n\r\nexport default { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}